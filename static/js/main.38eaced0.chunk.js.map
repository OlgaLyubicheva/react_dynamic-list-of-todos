{"version":3,"sources":["components/User.js","components/TodoItem.js","components/Sort.js","components/ColumnHead.js","components/changeCompleted.js","components/TodoList.js","App.js","index.js"],"names":["User","_ref","name","react_default","a","createElement","defaultProps","TodoItem","id","title","completed","user","changeCompleted","className","concat","type","defaultChecked","onChange","htmlFor","components_User","Sort","fieldOfSort","arr","sortStatus","updateAppState","sort","b","localeCompare","todos","Object","toConsumableArray","ColumnHead","columnName","onClick","bind","index","todo","func","splice","TodoList","components_ColumnHead","map","currentIndex","components_TodoItem","assign","key","App","state","textButton","disabledButton","renderButton","config","_this","setState","handleClick","fetch","then","response","json","dataTodos","dataUsers","objectSpread","find","person","userId","this","disabled","components_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.38eaced0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name }) => (\n  <div>\n    {name}\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string,\n};\n\nUser.defaultProps = {\n  name: null,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ id, title, completed, user, changeCompleted }) => (\n  <div className=\"todo-row\">\n    <input\n      id={`todo${id}`}\n      type=\"checkbox\"\n      defaultChecked={completed}\n      onChange={changeCompleted}\n    />\n\n    <label htmlFor={`todo${id}`}>\n      {title}\n    </label>\n\n    <User {...user} />\n  </div>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  changeCompleted: PropTypes.func.isRequired,\n};\n\nTodoItem.defaultProps = {\n  completed: false,\n  user: null,\n};\n\nexport default TodoItem;\n","const Sort = (fieldOfSort, arr, sortStatus, updateAppState) => {\n  switch (fieldOfSort) {\n    case 'Status':\n      arr.sort((a, b) => sortStatus * (a.completed - b.completed));\n      break;\n    case 'Todo':\n      arr.sort((a, b) => sortStatus * a.title.localeCompare(b.title));\n      break;\n    case 'User':\n      arr.sort((a, b) => sortStatus * a.user.name.localeCompare(b.user.name));\n      break;\n    default: break;\n  }\n\n  updateAppState({ todos: [...arr], sortStatus: -sortStatus });\n};\n\nexport default Sort;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sort from './Sort';\n\nconst ColumnHead = ({ todos, sortStatus, updateAppState, columnName }) => (\n  <div\n    className=\"todo-row--head\"\n    onClick={Sort.bind(null, columnName, todos, sortStatus, updateAppState)}\n  >\n    {columnName}\n  </div>\n);\n\nColumnHead.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n  sortStatus: PropTypes.number.isRequired,\n  updateAppState: PropTypes.func.isRequired,\n  columnName: PropTypes.string.isRequired,\n};\n\nexport default ColumnHead;\n","const changeCompleted = (index, todo, todos, func) => {\n  todo.completed = !todo.completed;\n  todos.splice(index, 1, todo);\n  func({ todos: [...todos] });\n};\n\nexport default changeCompleted;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport ColumnHead from './ColumnHead';\nimport changeCompleted from './changeCompleted';\n\nconst TodoList = ({ todos, sortStatus, updateAppState }) => (\n  <div>\n    <div className=\"todo-row\">\n      <ColumnHead\n        todos={todos}\n        sortStatus={sortStatus}\n        updateAppState={updateAppState}\n        columnName=\"Status\"\n      />\n\n      <ColumnHead\n        todos={todos}\n        sortStatus={sortStatus}\n        updateAppState={updateAppState}\n        columnName=\"Todo\"\n      />\n\n      <ColumnHead\n        todos={todos}\n        sortStatus={sortStatus}\n        updateAppState={updateAppState}\n        columnName=\"User\"\n      />\n    </div>\n\n    {\n      todos.map((todo, currentIndex) => (\n        <TodoItem\n          {...todo}\n          key={`keyTodo${todo.id}`}\n          changeCompleted={() => changeCompleted(currentIndex, todo, todos, updateAppState)}\n        />\n      ))\n    }\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n  sortStatus: PropTypes.number.isRequired,\n  updateAppState: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    textButton: 'Load...',\n    disabledButton: false,\n    renderButton: true,\n    sortStatus: 1,\n    todos: [],\n  }\n\n  updateAppState = (config) => {\n    this.setState(config);\n  }\n\n  handleClick = () => {\n    this.setState({\n      disabledButton: true,\n      textButton: 'Loading...',\n    });\n\n    fetch('https://jsonplaceholder.typicode.com/todos')\n      .then(response => response.json())\n      .then((dataTodos) => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n          .then(response => response.json())\n          .then(dataUsers => (dataTodos.map(todo => (\n            {\n              ...todo,\n              user: dataUsers.find(person => person.id === todo.userId),\n            }))))\n          .then((todos) => {\n            this.setState({\n              todos: [...todos],\n              renderButton: false,\n            });\n          });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        {\n          (this.state.renderButton)\n            ? (\n              <button\n                disabled={this.state.disabledButton}\n                onClick={this.handleClick}\n              >\n                {this.state.textButton}\n              </button>\n            )\n            : (\n              <TodoList\n                todos={this.state.todos}\n                updateAppState={this.updateAppState.bind(this)}\n                sortStatus={this.state.sortStatus}\n              />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}